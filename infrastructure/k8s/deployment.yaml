# AIRIS EPM Main Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airis-epm-app
  namespace: airis-epm
  labels:
    app: airis-epm
    component: application
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: airis-epm
      component: application
  template:
    metadata:
      labels:
        app: airis-epm
        component: application
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: airis-epm
        image: airis-epm:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          protocol: TCP
          name: http
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: airis-epm-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: airis-epm-config
              key: PORT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: airis-epm-config
              key: LOG_LEVEL
        - name: DATABASE_URL
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@airis-epm-postgres:5432/$(POSTGRES_DB)"
        - name: CLICKHOUSE_URL
          valueFrom:
            configMapKeyRef:
              name: airis-epm-config
              key: CLICKHOUSE_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: airis-epm-config
              key: REDIS_URL
        - name: MONGODB_URL
          valueFrom:
            configMapKeyRef:
              name: airis-epm-config
              key: MONGODB_URL
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: airis-epm-secrets
              key: JWT_SECRET
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: airis-epm-secrets
              key: SESSION_SECRET
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: airis-epm-db-secrets
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: airis-epm-db-secrets
              key: postgres-password
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: airis-epm-db-secrets
              key: postgres-database
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
        - name: app-config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: app-logs
        emptyDir: {}
      - name: app-config
        configMap:
          name: airis-epm-app-config
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      
---
# ClickHouse Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airis-epm-clickhouse
  namespace: airis-epm
  labels:
    app: airis-epm
    component: clickhouse
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airis-epm
      component: clickhouse
  template:
    metadata:
      labels:
        app: airis-epm
        component: clickhouse
    spec:
      containers:
      - name: clickhouse
        image: clickhouse/clickhouse-server:23.8-alpine
        ports:
        - containerPort: 8123
          name: http
        - containerPort: 9000
          name: native
        env:
        - name: CLICKHOUSE_DB
          valueFrom:
            secretKeyRef:
              name: airis-epm-db-secrets
              key: clickhouse-database
        - name: CLICKHOUSE_USER
          valueFrom:
            secretKeyRef:
              name: airis-epm-db-secrets
              key: clickhouse-user
        - name: CLICKHOUSE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: airis-epm-db-secrets
              key: clickhouse-password
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: clickhouse-data
          mountPath: /var/lib/clickhouse
        livenessProbe:
          httpGet:
            path: /ping
            port: 8123
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ping
            port: 8123
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: clickhouse-data
        persistentVolumeClaim:
          claimName: airis-epm-clickhouse-pvc

---
# PostgreSQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airis-epm-postgres
  namespace: airis-epm
  labels:
    app: airis-epm
    component: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airis-epm
      component: postgres
  template:
    metadata:
      labels:
        app: airis-epm
        component: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: airis-epm-db-secrets
              key: postgres-database
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: airis-epm-db-secrets
              key: postgres-user
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: airis-epm-db-secrets
              key: postgres-password
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: airis-epm-postgres-pvc