# OpenReplay 통합 관리자 서비스 Dockerfile
FROM node:20-alpine AS builder

# 메타데이터
LABEL maintainer="AIRIS EPM Development Team <dev-team@airis-epm.com>"
LABEL description="OpenReplay 통합 관리자 서비스"
LABEL version="1.0.0"

WORKDIR /app

# 시스템 의존성 설치
RUN apk add --no-cache \
    dumb-init \
    curl \
    python3 \
    make \
    g++ \
    && addgroup -g 1001 -S openreplay \
    && adduser -S openreplay -u 1001

# 의존성 설치
COPY package*.json ./
RUN npm ci --only=production && npm cache clean --force

# 소스 코드 복사
COPY --chown=openreplay:openreplay . .

# 빌드 (TypeScript 컴파일)
RUN npm run build || echo "No build script found"

# 프로덕션 이미지
FROM node:20-alpine AS runtime

WORKDIR /app

# 시스템 의존성 설치
RUN apk add --no-cache dumb-init curl \
    && addgroup -g 1001 -S openreplay \
    && adduser -S openreplay -u 1001

# 빌드된 애플리케이션 복사
COPY --from=builder --chown=openreplay:openreplay /app/node_modules ./node_modules
COPY --from=builder --chown=openreplay:openreplay /app/dist ./dist
COPY --from=builder --chown=openreplay:openreplay /app/public ./public
COPY --from=builder --chown=openreplay:openreplay /app/package*.json ./

# 로그 및 저장소 디렉터리 생성
RUN mkdir -p logs storage uploads temp \
    && chown -R openreplay:openreplay logs storage uploads temp

# 환경 설정
ENV NODE_ENV=production
ENV PORT=4000
ENV LOG_LEVEL=info

# 헬스체크 설정
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:${PORT}/health || exit 1

# 포트 노출
EXPOSE ${PORT}

# 사용자 전환
USER openreplay

# 애플리케이션 시작
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "dist/index.js"]